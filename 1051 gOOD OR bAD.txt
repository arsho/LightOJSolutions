#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
#include<climits>

using namespace std;
#define inf INT_MAX
#define pi 2*acos(0.0)
#define mod 1000000000

string s;
int len;
int vowelCheck(char c)
{
    return (c=='A' || c=='E' || c=='I' || c=='O' || c=='U');
}
int dp[100][10][10];
int solveDp(int i, int numOfVowels, int numOfCons)
{
    if((numOfVowels==3)||(numOfCons==5))
        return 2;
    if(i>=len)
        return 5;
    if(dp[i][numOfVowels][numOfCons]!=-1)
        return dp[i][numOfVowels][numOfCons];
    if(s[i]=='?')
        dp[i][numOfVowels][numOfCons]=solveDp(i+1,numOfVowels+1,0) | solveDp(i+1,0,numOfCons+1);
    else if(vowelCheck(s[i])==1)
        dp[i][numOfVowels][numOfCons]=solveDp(i+1,numOfVowels+1,0);
    else
        dp[i][numOfVowels][numOfCons]=solveDp(i+1,0,numOfCons+1);
    return dp[i][numOfVowels][numOfCons];
}
int main()
{
    int i,res,cas,t;
    cin>>cas;
    for(t=1; t<=cas; t++)
    {
        cin>>s;
        len=s.length();
        memset(dp,-1,sizeof dp);
        res=solveDp(0,0,0);
        cout<<"Case "<<t<<": ";
        if(res==2)
            cout<<"BAD"<<endl;
        else if(res==5)
            cout<<"GOOD"<<endl;
        else
            cout<<"MIXED"<<endl;
    }
    return 0;
}


